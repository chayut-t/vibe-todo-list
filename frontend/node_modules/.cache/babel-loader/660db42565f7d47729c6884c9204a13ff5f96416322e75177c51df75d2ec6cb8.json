{"ast":null,"code":"var _jsxFileName = \"/Users/chayut/workplace/vibe-todo-list/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport TaskInput from './components/TaskInput';\nimport TaskList from './components/TaskList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]); // Initialize with empty array\n\n  // Function to add a new task\n  const addTask = taskTitle => {\n    const newTask = {\n      // Using timestamp for a simple unique ID for now\n      id: Date.now(),\n      title: taskTitle,\n      completed: false\n      // Add other fields like description, category later\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  // Function to toggle task completion status\n  const toggleComplete = taskId => {\n    setTasks(tasks.map(task => task.id === taskId ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App-content\",\n      children: [/*#__PURE__*/_jsxDEV(TaskInput, {\n        addTask: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: tasks,\n        toggleComplete: toggleComplete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TaskInput","TaskList","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","addTask","taskTitle","newTask","id","Date","now","title","completed","toggleComplete","taskId","map","task","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chayut/workplace/vibe-todo-list/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport TaskInput from './components/TaskInput';\nimport TaskList from './components/TaskList';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]); // Initialize with empty array\n\n  // Function to add a new task\n  const addTask = (taskTitle) => {\n    const newTask = {\n      // Using timestamp for a simple unique ID for now\n      id: Date.now(),\n      title: taskTitle,\n      completed: false,\n      // Add other fields like description, category later\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  // Function to toggle task completion status\n  const toggleComplete = (taskId) => {\n    setTasks(\n      tasks.map(task =>\n        task.id === taskId ? { ...task, completed: !task.completed } : task\n      )\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Todo List</h1>\n      </header>\n      <main className=\"App-content\">\n        <TaskInput addTask={addTask} />\n        <TaskList tasks={tasks} toggleComplete={toggleComplete} />\n      </main>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExC;EACA,MAAMS,OAAO,GAAIC,SAAS,IAAK;IAC7B,MAAMC,OAAO,GAAG;MACd;MACAC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdC,KAAK,EAAEL,SAAS;MAChBM,SAAS,EAAE;MACX;IACF,CAAC;IACDR,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEI,OAAO,CAAC,CAAC;EAC/B,CAAC;;EAED;EACA,MAAMM,cAAc,GAAIC,MAAM,IAAK;IACjCV,QAAQ,CACND,KAAK,CAACY,GAAG,CAACC,IAAI,IACZA,IAAI,CAACR,EAAE,KAAKM,MAAM,GAAG;MAAE,GAAGE,IAAI;MAAEJ,SAAS,EAAE,CAACI,IAAI,CAACJ;IAAU,CAAC,GAAGI,IACjE,CACF,CAAC;EACH,CAAC;EAED,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBlB,OAAA;MAAQiB,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC5BlB,OAAA;QAAAkB,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACTtB,OAAA;MAAMiB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC3BlB,OAAA,CAACH,SAAS;QAACQ,OAAO,EAAEA;MAAQ;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/BtB,OAAA,CAACF,QAAQ;QAACK,KAAK,EAAEA,KAAM;QAACU,cAAc,EAAEA;MAAe;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACpB,EAAA,CAnCQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}