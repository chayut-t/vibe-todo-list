{"ast":null,"code":"var _jsxFileName = \"/Users/chayut/workplace/vibe-todo-list/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport TaskInput from './components/TaskInput';\nimport TaskList from './components/TaskList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]); // Initialize with empty array\n  const [editingTaskId, setEditingTaskId] = useState(null); // Track which task is being edited\n  const [editText, setEditText] = useState(''); // Store the text being edited\n\n  // Function to add a new task\n  const addTask = taskTitle => {\n    const newTask = {\n      id: Date.now(),\n      title: taskTitle,\n      completed: false,\n      createdAt: new Date()\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  // Function to toggle task completion status\n  const toggleComplete = taskId => {\n    // Prevent toggling complete while editing\n    if (editingTaskId === taskId) return;\n    setTasks(tasks.map(task => task.id === taskId ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n\n  // Function to delete a task\n  const deleteTask = taskId => {\n    // Prevent deleting while editing this task\n    if (editingTaskId === taskId) return;\n    setTasks(tasks.filter(task => task.id !== taskId));\n  };\n\n  // Function to start editing a task\n  const startEdit = task => {\n    setEditingTaskId(task.id);\n    setEditText(task.title);\n  };\n\n  // Function to save the edited task\n  const saveEdit = taskId => {\n    if (editText.trim() === '') return; // Prevent saving empty title\n    setTasks(tasks.map(task => task.id === taskId ? {\n      ...task,\n      title: editText\n    } : task));\n    setEditingTaskId(null); // Exit editing mode\n    setEditText('');\n  };\n\n  // Function to cancel editing\n  const cancelEdit = () => {\n    setEditingTaskId(null);\n    setEditText('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App-content\",\n      children: [/*#__PURE__*/_jsxDEV(TaskInput, {\n        addTask: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: tasks,\n        toggleComplete: toggleComplete,\n        deleteTask: deleteTask,\n        startEdit: startEdit // Pass startEdit\n        ,\n        saveEdit: saveEdit // Pass saveEdit\n        ,\n        cancelEdit: cancelEdit // Pass cancelEdit\n        ,\n        editingTaskId: editingTaskId // Pass editingTaskId\n        ,\n        editText: editText // Pass editText\n        ,\n        setEditText: setEditText // Pass setEditText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/k5I9rmAFvKtdxmNO7jLwJyOrjE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TaskInput","TaskList","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","editingTaskId","setEditingTaskId","editText","setEditText","addTask","taskTitle","newTask","id","Date","now","title","completed","createdAt","toggleComplete","taskId","map","task","deleteTask","filter","startEdit","saveEdit","trim","cancelEdit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chayut/workplace/vibe-todo-list/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport TaskInput from './components/TaskInput';\nimport TaskList from './components/TaskList';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]); // Initialize with empty array\n  const [editingTaskId, setEditingTaskId] = useState(null); // Track which task is being edited\n  const [editText, setEditText] = useState(''); // Store the text being edited\n\n  // Function to add a new task\n  const addTask = (taskTitle) => {\n    const newTask = {\n      id: Date.now(),\n      title: taskTitle,\n      completed: false,\n      createdAt: new Date()\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  // Function to toggle task completion status\n  const toggleComplete = (taskId) => {\n    // Prevent toggling complete while editing\n    if (editingTaskId === taskId) return;\n    setTasks(\n      tasks.map(task =>\n        task.id === taskId ? { ...task, completed: !task.completed } : task\n      )\n    );\n  };\n\n  // Function to delete a task\n  const deleteTask = (taskId) => {\n    // Prevent deleting while editing this task\n    if (editingTaskId === taskId) return;\n    setTasks(tasks.filter(task => task.id !== taskId));\n  };\n\n  // Function to start editing a task\n  const startEdit = (task) => {\n    setEditingTaskId(task.id);\n    setEditText(task.title);\n  };\n\n  // Function to save the edited task\n  const saveEdit = (taskId) => {\n    if (editText.trim() === '') return; // Prevent saving empty title\n    setTasks(\n      tasks.map(task =>\n        task.id === taskId ? { ...task, title: editText } : task\n      )\n    );\n    setEditingTaskId(null); // Exit editing mode\n    setEditText('');\n  };\n\n  // Function to cancel editing\n  const cancelEdit = () => {\n    setEditingTaskId(null);\n    setEditText('');\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Todo List</h1>\n      </header>\n      <main className=\"App-content\">\n        <TaskInput addTask={addTask} />\n        <TaskList\n          tasks={tasks}\n          toggleComplete={toggleComplete}\n          deleteTask={deleteTask}\n          startEdit={startEdit}       // Pass startEdit\n          saveEdit={saveEdit}         // Pass saveEdit\n          cancelEdit={cancelEdit}     // Pass cancelEdit\n          editingTaskId={editingTaskId} // Pass editingTaskId\n          editText={editText}         // Pass editText\n          setEditText={setEditText}   // Pass setEditText\n        />\n      </main>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}